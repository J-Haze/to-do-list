/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const { renderTasks } = __webpack_require__(/*! ./tasks */ \"./src/tasks.js\");\r\n// import {renderTasks} from './tasks.js';\r\n\r\n\r\n\r\n//^^Where did that come from\r\nconsole.log(\"check webpack2\")\r\n\r\n//Checks that Local Storage is available\r\nfunction storageAvailable(type) {\r\n    var storage;\r\n    try {\r\n        storage = window[type];\r\n        var x = '__storage_test__';\r\n        storage.setItem(x, x);\r\n        storage.removeItem(x);\r\n        return true;\r\n    }\r\n    catch(e) {\r\n        return e instanceof DOMException && (\r\n            // everything except Firefox\r\n            e.code === 22 ||\r\n            // Firefox\r\n            e.code === 1014 ||\r\n            // test name field too, because code might not be present\r\n            // everything except Firefox\r\n            e.name === 'QuotaExceededError' ||\r\n            // Firefox\r\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n            // acknowledge QuotaExceededError only if there's something already stored\r\n            (storage && storage.length !== 0);\r\n    }\r\n}\r\n\r\n//Alerts if Local Storage is not available\r\nif (storageAvailable('localStorage')) {\r\n    console.log(\"Local Storage Available\");\r\n  }\r\n  else {\r\n    alert(\"Local Storage Unavailable\");\r\n  }\r\n\r\n\r\n// import {renderTasks} from './tasks';\r\n\r\n\r\n//Initialize project libarary\r\nfunction getProjectLibrary() {\r\n    let projectLibrary = [];\r\n    storedLibrary = JSON.parse(localStorage.getItem(\"projectLibrary\"));\r\n    if(storedLibrary.length > 0) { \r\n        projectLibrary = storedLibrary;\r\n    }\r\n    return projectLibrary;\r\n  };\r\n\r\nfunction getAllTasks() {\r\n    let allTasks = [];\r\n    let storedTasks = JSON.parse(localStorage.getItem(\"allTasks\"));\r\n    if (storedTasks == null){\r\n        allTasks = [];\r\n        return allTasks\r\n    }\r\n    if(storedTasks.length > 0) { \r\n        allTasks = storedTasks;\r\n    }\r\n    return allTasks;\r\n  };\r\n\r\n\r\n//Factory Function to create Projects\r\nconst addProject = (projectName, projectArray) => {\r\n    return { \r\n        projectName: projectName,\r\n        projectArray: projectArray\r\n    }\r\n  };\r\n\r\n//Factory Function to create Task\r\nconst addTask = (taskName, project, priority, date, notes) => {\r\nreturn { \r\n    taskName: taskName,\r\n    project: project,\r\n    priority: priority,\r\n    date: date,\r\n    notes: notes\r\n}\r\n};\r\n\r\nallTasks = getAllTasks();\r\nconsole.log(\"GetAllTasks:\", allTasks)\r\n\r\nlet allTasksTab = addProject(\"all\", allTasks);\r\n\r\n\r\n// let edittedObject = \"\";\r\nlet activeProject = allTasksTab;\r\n\r\n//Adds new project to the \"projectLibrary\"\r\nfunction addProjectToLibrary(addProject) {\r\n    projectLibrary.push(addProject);\r\n}\r\n\r\n\r\n//Adds new Task to Project\r\nfunction addTaskToProject(newTask) {\r\n    // console.log(\"acitve\", activeProject)\r\n    // console.log(\"here\", activeProject.projectArray)\r\n    // console.log(\"New task:\", newTask)\r\n    if (activeProject.projectArray == undefined){\r\n        activeProject.projectArray = newTask;\r\n        allTasks = newTask;\r\n    }\r\n    activeProject.projectArray.push(newTask);\r\n    // console.log(\"All Tasks Here:\", allTasks)\r\n    allTasks.push(newTask);\r\n}\r\n\r\n//Script for priority\r\nlet priorityValue = \"low\";\r\n\r\nlet lowBtn = document.getElementById(\"lowBtn\");\r\nlet mediumBtn = document.getElementById(\"mediumBtn\");\r\nlet highBtn = document.getElementById(\"highBtn\");\r\n\r\nlowBtn.onclick = function() {\r\n    lowBtn.classList.add(\"lowSelected\");\r\n    mediumBtn.classList.remove(\"mediumSelected\");\r\n    highBtn.classList.remove(\"highSelected\");\r\n    priorityValue = \"low\";\r\n};\r\n\r\nmediumBtn.onclick = function() {\r\n    lowBtn.classList.remove(\"lowSelected\");\r\n    mediumBtn.classList.add(\"mediumSelected\");\r\n    highBtn.classList.remove(\"highSelected\");\r\n    priorityValue = \"medium\";\r\n};\r\n\r\nhighBtn.onclick = function() {\r\n    lowBtn.classList.remove(\"lowSelected\");\r\n    mediumBtn.classList.remove(\"mediumSelected\");\r\n    highBtn.classList.add(\"highSelected\");\r\n    priorityValue = \"high\";\r\n};\r\n\r\n//Creates new div with the new project object\r\nlet projectsContent = document.getElementById(\"projects-content\");\r\n\r\nfunction clearProjectLibrary(){\r\n    projectsContent.innerHTML = '';\r\n}\r\n\r\nfunction renderProjects(projectLibrary){\r\n    clearProjectLibrary();\r\n    \r\n    if(projectsContent.length == 0) {\r\n        return\r\n      }\r\n    // console.log(projectLibrary.length)\r\n      if(projectLibrary.length == 0){\r\n        return\r\n    }\r\n\r\n    let allTodos = document.getElementById(\"projects-header\");\r\n    let selectedProject = document.querySelector('.selectedProject')\r\n    allTodos.onclick = function() {\r\n        if (selectedProject != null){\r\n            selectedProject.classList.remove(\"selectedProject\");\r\n        }\r\n        allTodos.classList.add(\"selectedProject\");\r\n        activeProject = allTasksTab;\r\n        selectedProject = document.querySelector('.selectedProject');\r\n        renderTasks(activeProject, allTasks);\r\n    };\r\n\r\n    // let allProjects = document.getElementsByClassName('project');\r\n    // let selectedProject = allProjects.getElementByClassName(\"selectedProject\")\r\n    \r\n    //!!This \"project\" is where the issue is?\r\n    // console.log(projectLibrary)\r\n    for (let project in projectLibrary) {\r\n        // console.log(projectLibrary[project])\r\n        let obj = projectLibrary[project];\r\n        let newElement = document.createElement('div');\r\n        newElement.innerHTML = obj.projectName;\r\n        newElement.id = obj.projectName;\r\n        newElement.className = \"project\";\r\n        projectsContent.appendChild(newElement);\r\n\r\n        //Event Listener for selecting the active project\r\n        newElement.onclick = function() {\r\n            if (selectedProject != null){\r\n                selectedProject.classList.remove(\"selectedProject\");\r\n            }\r\n\r\n            newElement.classList.add(\"selectedProject\");\r\n            // activeProject = obj.projectName;\r\n            // console.log(\"obj before activeProj:\", obj)\r\n            // console.log(\"obj.projectArr before activeProj:\", obj.projectArray)\r\n            activeProject = obj;\r\n            // console.log(\"!! activeProject:\", activeProject)\r\n            selectedProject = document.querySelector('.selectedProject')\r\n\r\n            //code to load local storage of project Array? aka tasks?\r\n            // if(localStorage.length > 0) { \r\n            //     projectLibrary = JSON.parse(localStorage.getItem(\"activeProject.projectArray\"));\r\n            //   }\r\n            renderTasks(activeProject, allTasks);\r\n        };\r\n\r\n        //Button to edit project title\r\n        let edit = document.createElement('div');\r\n        edit.innerHTML = '<i class=\"fa fa-pencil\"></i>';\r\n        edit.className = \"edit\";\r\n        \r\n        edit.onclick = function() {\r\n            modalProject.style.display = \"block\";\r\n            edit.id = project;\r\n            edittedProject = obj.projectName;\r\n            // console.log(obj.projectName)\r\n            // console.log(\"edittedProject\", edittedProject)\r\n\r\n            return edittedProject = edittedProject\r\n            // localStorage.setItem(\"projectLibrary\", JSON.stringify(projectLibrary));\r\n            // renderProjects(projectLibrary)\r\n          }\r\n        newElement.appendChild(edit);\r\n\r\n        //Button to delete projects\r\n        let close = document.createElement('div');\r\n        // close.innerHTML = '&#128465';\r\n        close.innerHTML = '<i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>';\r\n        close.className = \"delete\";\r\n        // close.id = project.projectName;\r\n        // console.log(\"project.projectName\", project.projectName)\r\n        // obj.projectName\r\n        close.id = project;\r\n        // console.log(\"project here\", project)\r\n        close.onclick = function() {\r\n            closeName = projectLibrary[close.id].projectName;\r\n            console.log(\"closeName:\", closeName)\r\n            projectLibrary.splice(close.id,1);\r\n            for (task in allTasks){\r\n                console.log('task.projectname,', allTasks[task].project)\r\n                console.log('obj id', closeName)\r\n                if (allTasks[task].project == closeName){\r\n                    console.log('match')\r\n                    allTasks.splice(task,1)\r\n                }\r\n            }\r\n\r\n            localStorage.setItem(\"projectLibrary\", JSON.stringify(projectLibrary));\r\n            renderProjects(projectLibrary);\r\n            renderTasks(activeProject, allTasks);\r\n          }\r\n        newElement.appendChild(close);\r\n        \r\n        // localStorage.setItem(\"projectLibrary\", JSON.stringify(projectLibrary));\r\n    };\r\n    \r\n};\r\n\r\n//Even Listener for Add Project Button\r\nlet addProjectBtn = document.getElementById(\"add-project\");\r\n\r\naddProjectBtn.addEventListener('click', () => {\r\n    let projectTitle = document.getElementById(\"project-form\").value;\r\n    if (projectLibrary.length < 1){return};\r\n    //check for duplicate names\r\n    for (project in projectLibrary){\r\n        let obj = projectLibrary[project];\r\n        if (obj.projectName == projectTitle){\r\n            projectTitle = `${projectTitle}.1`;\r\n        }\r\n    }\r\n\r\n    if (projectTitle == \"\"){return}\r\n    let newProjectArray = [];\r\n    let newProject = addProject(projectTitle, newProjectArray);\r\n\r\n    let obj = \"\";\r\n    addProjectToLibrary(newProject);\r\n    localStorage.setItem(\"projectLibrary\", JSON.stringify(projectLibrary));\r\n    renderProjects(projectLibrary);\r\n})\r\n\r\n\r\n//Add Project Modal\r\nlet modalProject = document.getElementById(\"modal-project\");\r\nlet editProjectBtn = document.getElementById(\"submit-project\");\r\nlet projectSpan = document.getElementsByClassName(\"span\")[0];\r\n\r\nprojectSpan.onclick = function() {\r\n    modalProject.style.display = \"none\";\r\n}\r\n\r\nwindow.onclick = function(event) {\r\n  if (event.target == modalProject) {\r\n    modalProject.style.display = \"none\";\r\n  }\r\n}\r\n\r\neditProjectBtn.addEventListener('click', () => {\r\n    let edittedValue = document.getElementById(\"edit-project\").value;\r\n    if (edittedValue == \"\"){\r\n        return\r\n    }\r\n    \r\n    let changeProject = document.getElementById(edittedProject);\r\n    let projectID = changeProject.id;\r\n\r\n\r\n    for (project in projectLibrary){\r\n        let obj = projectLibrary[project];\r\n        // console.log(obj.projectName)\r\n        if (obj.projectName == projectID){\r\n            // console.log(\"match\")\r\n            // obj.innerHTML = edittedValue;\r\n            obj.projectName = edittedValue;\r\n            // obj.id = edittedValue;\r\n        }\r\n    }\r\n    \r\n        console.log(\"project ID:\", projectID)\r\n        console.log(\"edittedValue:,\", edittedValue)\r\n\r\n    for (task in allTasks){\r\n        console.log('task.projectname,', allTasks[task].project)\r\n        // console.log('obj id', edittedProject)\r\n        // console.log('project', project)\r\n        if (allTasks[task].project == projectID){\r\n            console.log('match')\r\n            allTasks[task].project = edittedValue\r\n        }}\r\n\r\n\r\n\r\n    // console.log(projectLibrary)\r\n    localStorage.setItem(\"allTasks\", JSON.stringify(allTasks));\r\n    localStorage.setItem(\"projectLibrary\", JSON.stringify(projectLibrary));\r\n    renderTasks(activeProject, allTasks);\r\n    renderProjects(projectLibrary)\r\n    modalProject.style.display = \"none\";\r\n});\r\n\r\n//Event Listener for \"addTaskBtn\"\r\n\r\nlet addTaskBtn = document.getElementById(\"addTaskBtn\");\r\n\r\naddTaskBtn.addEventListener('click', () => {\r\n    //Get task from the form\r\n    let taskTitle = document.getElementById(\"new-task-form\").value;\r\n    let priority = priorityValue;\r\n    //Will need to reformat how it gets data from \"date\"\r\n    let date = document.getElementById(\"date\").innerHTML;\r\n    let notes = document.getElementById(\"notes-input\").value;\r\n\r\n    // if (.length < 1){return};\r\n    //Do I need a length check there? ^^\r\n\r\n    //Make sure form isn't empty\r\n    if (taskTitle == \"\"){\r\n        console.log('Task Title is blank')\r\n        return}\r\n    if (activeProject == allTasksTab){\r\n        alert(\"Please select a Project to add To-Do to.\")\r\n        return\r\n    }\r\n\r\n    //check for duplicate names\r\n    // for (let task in activeProject.projectArray){\r\n    //     let obj = activeProject.projectArray[task];\r\n    //     if (obj.taskName == taskTitle){\r\n    //         taskTitle = `${taskTitle}.1`;\r\n    //     }\r\n    // }\r\n    for (task in allTasks){\r\n        if (task == taskTitle){\r\n            taskTitle = `${taskTitle}.1`;\r\n        }\r\n    }\r\n    \r\n    // let newProjectArray = [];\r\n    let newTask = addTask(taskTitle, activeProject.projectName, priority, date, notes);\r\n\r\n    addTaskToProject(newTask);\r\n    //\r\n    // localStorage.setItem(\"activeProject.projectArray\", JSON.stringify(activeProject.projectArray));\r\n    renderTasks(activeProject, allTasks);\r\n    //I think this is important to have\r\n    localStorage.setItem(\"allTasks\", JSON.stringify(allTasks));\r\n    // console.log(\"All Tasks:\", allTasks)\r\n    // console.log(\"Project Library:\", projectLibrary)\r\n    localStorage.setItem(\"projectLibrary\", JSON.stringify(projectLibrary));\r\n});\r\n\r\n\r\n//add event listeners for all \"project\" class, when you click on it style changes to selected, removes selected from others, and \r\n\r\n\r\n//need an array of all existing \"projects\" as objects\r\n\r\n\r\n//will need an array of all existing to-do's as objects\r\n\r\nlet projectLibrary = getProjectLibrary();\r\n\r\n//render\r\nrenderProjects(projectLibrary);\r\n\r\n// console.log(\"Index Active Project:\", activeProject, \"-Index projectArray:\", activeProject.projectArray)\r\n// renderTasks(activeProject, activeProject.projectArray);\r\nrenderTasks(activeProject, allTasks);\r\n//renderTodos(todoLibrary);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXguanM/YjYzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IHJlbmRlclRhc2tzIH0gPSByZXF1aXJlKFwiLi90YXNrc1wiKTtcclxuLy8gaW1wb3J0IHtyZW5kZXJUYXNrc30gZnJvbSAnLi90YXNrcy5qcyc7XHJcblxyXG5cclxuXHJcbi8vXl5XaGVyZSBkaWQgdGhhdCBjb21lIGZyb21cclxuY29uc29sZS5sb2coXCJjaGVjayB3ZWJwYWNrMlwiKVxyXG5cclxuLy9DaGVja3MgdGhhdCBMb2NhbCBTdG9yYWdlIGlzIGF2YWlsYWJsZVxyXG5mdW5jdGlvbiBzdG9yYWdlQXZhaWxhYmxlKHR5cGUpIHtcclxuICAgIHZhciBzdG9yYWdlO1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBzdG9yYWdlID0gd2luZG93W3R5cGVdO1xyXG4gICAgICAgIHZhciB4ID0gJ19fc3RvcmFnZV90ZXN0X18nO1xyXG4gICAgICAgIHN0b3JhZ2Uuc2V0SXRlbSh4LCB4KTtcclxuICAgICAgICBzdG9yYWdlLnJlbW92ZUl0ZW0oeCk7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgICBjYXRjaChlKSB7XHJcbiAgICAgICAgcmV0dXJuIGUgaW5zdGFuY2VvZiBET01FeGNlcHRpb24gJiYgKFxyXG4gICAgICAgICAgICAvLyBldmVyeXRoaW5nIGV4Y2VwdCBGaXJlZm94XHJcbiAgICAgICAgICAgIGUuY29kZSA9PT0gMjIgfHxcclxuICAgICAgICAgICAgLy8gRmlyZWZveFxyXG4gICAgICAgICAgICBlLmNvZGUgPT09IDEwMTQgfHxcclxuICAgICAgICAgICAgLy8gdGVzdCBuYW1lIGZpZWxkIHRvbywgYmVjYXVzZSBjb2RlIG1pZ2h0IG5vdCBiZSBwcmVzZW50XHJcbiAgICAgICAgICAgIC8vIGV2ZXJ5dGhpbmcgZXhjZXB0IEZpcmVmb3hcclxuICAgICAgICAgICAgZS5uYW1lID09PSAnUXVvdGFFeGNlZWRlZEVycm9yJyB8fFxyXG4gICAgICAgICAgICAvLyBGaXJlZm94XHJcbiAgICAgICAgICAgIGUubmFtZSA9PT0gJ05TX0VSUk9SX0RPTV9RVU9UQV9SRUFDSEVEJykgJiZcclxuICAgICAgICAgICAgLy8gYWNrbm93bGVkZ2UgUXVvdGFFeGNlZWRlZEVycm9yIG9ubHkgaWYgdGhlcmUncyBzb21ldGhpbmcgYWxyZWFkeSBzdG9yZWRcclxuICAgICAgICAgICAgKHN0b3JhZ2UgJiYgc3RvcmFnZS5sZW5ndGggIT09IDApO1xyXG4gICAgfVxyXG59XHJcblxyXG4vL0FsZXJ0cyBpZiBMb2NhbCBTdG9yYWdlIGlzIG5vdCBhdmFpbGFibGVcclxuaWYgKHN0b3JhZ2VBdmFpbGFibGUoJ2xvY2FsU3RvcmFnZScpKSB7XHJcbiAgICBjb25zb2xlLmxvZyhcIkxvY2FsIFN0b3JhZ2UgQXZhaWxhYmxlXCIpO1xyXG4gIH1cclxuICBlbHNlIHtcclxuICAgIGFsZXJ0KFwiTG9jYWwgU3RvcmFnZSBVbmF2YWlsYWJsZVwiKTtcclxuICB9XHJcblxyXG5cclxuLy8gaW1wb3J0IHtyZW5kZXJUYXNrc30gZnJvbSAnLi90YXNrcyc7XHJcblxyXG5cclxuLy9Jbml0aWFsaXplIHByb2plY3QgbGliYXJhcnlcclxuZnVuY3Rpb24gZ2V0UHJvamVjdExpYnJhcnkoKSB7XHJcbiAgICBsZXQgcHJvamVjdExpYnJhcnkgPSBbXTtcclxuICAgIHN0b3JlZExpYnJhcnkgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwicHJvamVjdExpYnJhcnlcIikpO1xyXG4gICAgaWYoc3RvcmVkTGlicmFyeS5sZW5ndGggPiAwKSB7IFxyXG4gICAgICAgIHByb2plY3RMaWJyYXJ5ID0gc3RvcmVkTGlicmFyeTtcclxuICAgIH1cclxuICAgIHJldHVybiBwcm9qZWN0TGlicmFyeTtcclxuICB9O1xyXG5cclxuZnVuY3Rpb24gZ2V0QWxsVGFza3MoKSB7XHJcbiAgICBsZXQgYWxsVGFza3MgPSBbXTtcclxuICAgIGxldCBzdG9yZWRUYXNrcyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJhbGxUYXNrc1wiKSk7XHJcbiAgICBpZiAoc3RvcmVkVGFza3MgPT0gbnVsbCl7XHJcbiAgICAgICAgYWxsVGFza3MgPSBbXTtcclxuICAgICAgICByZXR1cm4gYWxsVGFza3NcclxuICAgIH1cclxuICAgIGlmKHN0b3JlZFRhc2tzLmxlbmd0aCA+IDApIHsgXHJcbiAgICAgICAgYWxsVGFza3MgPSBzdG9yZWRUYXNrcztcclxuICAgIH1cclxuICAgIHJldHVybiBhbGxUYXNrcztcclxuICB9O1xyXG5cclxuXHJcbi8vRmFjdG9yeSBGdW5jdGlvbiB0byBjcmVhdGUgUHJvamVjdHNcclxuY29uc3QgYWRkUHJvamVjdCA9IChwcm9qZWN0TmFtZSwgcHJvamVjdEFycmF5KSA9PiB7XHJcbiAgICByZXR1cm4geyBcclxuICAgICAgICBwcm9qZWN0TmFtZTogcHJvamVjdE5hbWUsXHJcbiAgICAgICAgcHJvamVjdEFycmF5OiBwcm9qZWN0QXJyYXlcclxuICAgIH1cclxuICB9O1xyXG5cclxuLy9GYWN0b3J5IEZ1bmN0aW9uIHRvIGNyZWF0ZSBUYXNrXHJcbmNvbnN0IGFkZFRhc2sgPSAodGFza05hbWUsIHByb2plY3QsIHByaW9yaXR5LCBkYXRlLCBub3RlcykgPT4ge1xyXG5yZXR1cm4geyBcclxuICAgIHRhc2tOYW1lOiB0YXNrTmFtZSxcclxuICAgIHByb2plY3Q6IHByb2plY3QsXHJcbiAgICBwcmlvcml0eTogcHJpb3JpdHksXHJcbiAgICBkYXRlOiBkYXRlLFxyXG4gICAgbm90ZXM6IG5vdGVzXHJcbn1cclxufTtcclxuXHJcbmFsbFRhc2tzID0gZ2V0QWxsVGFza3MoKTtcclxuY29uc29sZS5sb2coXCJHZXRBbGxUYXNrczpcIiwgYWxsVGFza3MpXHJcblxyXG5sZXQgYWxsVGFza3NUYWIgPSBhZGRQcm9qZWN0KFwiYWxsXCIsIGFsbFRhc2tzKTtcclxuXHJcblxyXG4vLyBsZXQgZWRpdHRlZE9iamVjdCA9IFwiXCI7XHJcbmxldCBhY3RpdmVQcm9qZWN0ID0gYWxsVGFza3NUYWI7XHJcblxyXG4vL0FkZHMgbmV3IHByb2plY3QgdG8gdGhlIFwicHJvamVjdExpYnJhcnlcIlxyXG5mdW5jdGlvbiBhZGRQcm9qZWN0VG9MaWJyYXJ5KGFkZFByb2plY3QpIHtcclxuICAgIHByb2plY3RMaWJyYXJ5LnB1c2goYWRkUHJvamVjdCk7XHJcbn1cclxuXHJcblxyXG4vL0FkZHMgbmV3IFRhc2sgdG8gUHJvamVjdFxyXG5mdW5jdGlvbiBhZGRUYXNrVG9Qcm9qZWN0KG5ld1Rhc2spIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKFwiYWNpdHZlXCIsIGFjdGl2ZVByb2plY3QpXHJcbiAgICAvLyBjb25zb2xlLmxvZyhcImhlcmVcIiwgYWN0aXZlUHJvamVjdC5wcm9qZWN0QXJyYXkpXHJcbiAgICAvLyBjb25zb2xlLmxvZyhcIk5ldyB0YXNrOlwiLCBuZXdUYXNrKVxyXG4gICAgaWYgKGFjdGl2ZVByb2plY3QucHJvamVjdEFycmF5ID09IHVuZGVmaW5lZCl7XHJcbiAgICAgICAgYWN0aXZlUHJvamVjdC5wcm9qZWN0QXJyYXkgPSBuZXdUYXNrO1xyXG4gICAgICAgIGFsbFRhc2tzID0gbmV3VGFzaztcclxuICAgIH1cclxuICAgIGFjdGl2ZVByb2plY3QucHJvamVjdEFycmF5LnB1c2gobmV3VGFzayk7XHJcbiAgICAvLyBjb25zb2xlLmxvZyhcIkFsbCBUYXNrcyBIZXJlOlwiLCBhbGxUYXNrcylcclxuICAgIGFsbFRhc2tzLnB1c2gobmV3VGFzayk7XHJcbn1cclxuXHJcbi8vU2NyaXB0IGZvciBwcmlvcml0eVxyXG5sZXQgcHJpb3JpdHlWYWx1ZSA9IFwibG93XCI7XHJcblxyXG5sZXQgbG93QnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsb3dCdG5cIik7XHJcbmxldCBtZWRpdW1CdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1lZGl1bUJ0blwiKTtcclxubGV0IGhpZ2hCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImhpZ2hCdG5cIik7XHJcblxyXG5sb3dCdG4ub25jbGljayA9IGZ1bmN0aW9uKCkge1xyXG4gICAgbG93QnRuLmNsYXNzTGlzdC5hZGQoXCJsb3dTZWxlY3RlZFwiKTtcclxuICAgIG1lZGl1bUJ0bi5jbGFzc0xpc3QucmVtb3ZlKFwibWVkaXVtU2VsZWN0ZWRcIik7XHJcbiAgICBoaWdoQnRuLmNsYXNzTGlzdC5yZW1vdmUoXCJoaWdoU2VsZWN0ZWRcIik7XHJcbiAgICBwcmlvcml0eVZhbHVlID0gXCJsb3dcIjtcclxufTtcclxuXHJcbm1lZGl1bUJ0bi5vbmNsaWNrID0gZnVuY3Rpb24oKSB7XHJcbiAgICBsb3dCdG4uY2xhc3NMaXN0LnJlbW92ZShcImxvd1NlbGVjdGVkXCIpO1xyXG4gICAgbWVkaXVtQnRuLmNsYXNzTGlzdC5hZGQoXCJtZWRpdW1TZWxlY3RlZFwiKTtcclxuICAgIGhpZ2hCdG4uY2xhc3NMaXN0LnJlbW92ZShcImhpZ2hTZWxlY3RlZFwiKTtcclxuICAgIHByaW9yaXR5VmFsdWUgPSBcIm1lZGl1bVwiO1xyXG59O1xyXG5cclxuaGlnaEJ0bi5vbmNsaWNrID0gZnVuY3Rpb24oKSB7XHJcbiAgICBsb3dCdG4uY2xhc3NMaXN0LnJlbW92ZShcImxvd1NlbGVjdGVkXCIpO1xyXG4gICAgbWVkaXVtQnRuLmNsYXNzTGlzdC5yZW1vdmUoXCJtZWRpdW1TZWxlY3RlZFwiKTtcclxuICAgIGhpZ2hCdG4uY2xhc3NMaXN0LmFkZChcImhpZ2hTZWxlY3RlZFwiKTtcclxuICAgIHByaW9yaXR5VmFsdWUgPSBcImhpZ2hcIjtcclxufTtcclxuXHJcbi8vQ3JlYXRlcyBuZXcgZGl2IHdpdGggdGhlIG5ldyBwcm9qZWN0IG9iamVjdFxyXG5sZXQgcHJvamVjdHNDb250ZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcm9qZWN0cy1jb250ZW50XCIpO1xyXG5cclxuZnVuY3Rpb24gY2xlYXJQcm9qZWN0TGlicmFyeSgpe1xyXG4gICAgcHJvamVjdHNDb250ZW50LmlubmVySFRNTCA9ICcnO1xyXG59XHJcblxyXG5mdW5jdGlvbiByZW5kZXJQcm9qZWN0cyhwcm9qZWN0TGlicmFyeSl7XHJcbiAgICBjbGVhclByb2plY3RMaWJyYXJ5KCk7XHJcbiAgICBcclxuICAgIGlmKHByb2plY3RzQ29udGVudC5sZW5ndGggPT0gMCkge1xyXG4gICAgICAgIHJldHVyblxyXG4gICAgICB9XHJcbiAgICAvLyBjb25zb2xlLmxvZyhwcm9qZWN0TGlicmFyeS5sZW5ndGgpXHJcbiAgICAgIGlmKHByb2plY3RMaWJyYXJ5Lmxlbmd0aCA9PSAwKXtcclxuICAgICAgICByZXR1cm5cclxuICAgIH1cclxuXHJcbiAgICBsZXQgYWxsVG9kb3MgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInByb2plY3RzLWhlYWRlclwiKTtcclxuICAgIGxldCBzZWxlY3RlZFByb2plY3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VsZWN0ZWRQcm9qZWN0JylcclxuICAgIGFsbFRvZG9zLm9uY2xpY2sgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICBpZiAoc2VsZWN0ZWRQcm9qZWN0ICE9IG51bGwpe1xyXG4gICAgICAgICAgICBzZWxlY3RlZFByb2plY3QuY2xhc3NMaXN0LnJlbW92ZShcInNlbGVjdGVkUHJvamVjdFwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgYWxsVG9kb3MuY2xhc3NMaXN0LmFkZChcInNlbGVjdGVkUHJvamVjdFwiKTtcclxuICAgICAgICBhY3RpdmVQcm9qZWN0ID0gYWxsVGFza3NUYWI7XHJcbiAgICAgICAgc2VsZWN0ZWRQcm9qZWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNlbGVjdGVkUHJvamVjdCcpO1xyXG4gICAgICAgIHJlbmRlclRhc2tzKGFjdGl2ZVByb2plY3QsIGFsbFRhc2tzKTtcclxuICAgIH07XHJcblxyXG4gICAgLy8gbGV0IGFsbFByb2plY3RzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgncHJvamVjdCcpO1xyXG4gICAgLy8gbGV0IHNlbGVjdGVkUHJvamVjdCA9IGFsbFByb2plY3RzLmdldEVsZW1lbnRCeUNsYXNzTmFtZShcInNlbGVjdGVkUHJvamVjdFwiKVxyXG4gICAgXHJcbiAgICAvLyEhVGhpcyBcInByb2plY3RcIiBpcyB3aGVyZSB0aGUgaXNzdWUgaXM/XHJcbiAgICAvLyBjb25zb2xlLmxvZyhwcm9qZWN0TGlicmFyeSlcclxuICAgIGZvciAobGV0IHByb2plY3QgaW4gcHJvamVjdExpYnJhcnkpIHtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhwcm9qZWN0TGlicmFyeVtwcm9qZWN0XSlcclxuICAgICAgICBsZXQgb2JqID0gcHJvamVjdExpYnJhcnlbcHJvamVjdF07XHJcbiAgICAgICAgbGV0IG5ld0VsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICBuZXdFbGVtZW50LmlubmVySFRNTCA9IG9iai5wcm9qZWN0TmFtZTtcclxuICAgICAgICBuZXdFbGVtZW50LmlkID0gb2JqLnByb2plY3ROYW1lO1xyXG4gICAgICAgIG5ld0VsZW1lbnQuY2xhc3NOYW1lID0gXCJwcm9qZWN0XCI7XHJcbiAgICAgICAgcHJvamVjdHNDb250ZW50LmFwcGVuZENoaWxkKG5ld0VsZW1lbnQpO1xyXG5cclxuICAgICAgICAvL0V2ZW50IExpc3RlbmVyIGZvciBzZWxlY3RpbmcgdGhlIGFjdGl2ZSBwcm9qZWN0XHJcbiAgICAgICAgbmV3RWxlbWVudC5vbmNsaWNrID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgIGlmIChzZWxlY3RlZFByb2plY3QgIT0gbnVsbCl7XHJcbiAgICAgICAgICAgICAgICBzZWxlY3RlZFByb2plY3QuY2xhc3NMaXN0LnJlbW92ZShcInNlbGVjdGVkUHJvamVjdFwiKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgbmV3RWxlbWVudC5jbGFzc0xpc3QuYWRkKFwic2VsZWN0ZWRQcm9qZWN0XCIpO1xyXG4gICAgICAgICAgICAvLyBhY3RpdmVQcm9qZWN0ID0gb2JqLnByb2plY3ROYW1lO1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIm9iaiBiZWZvcmUgYWN0aXZlUHJvajpcIiwgb2JqKVxyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIm9iai5wcm9qZWN0QXJyIGJlZm9yZSBhY3RpdmVQcm9qOlwiLCBvYmoucHJvamVjdEFycmF5KVxyXG4gICAgICAgICAgICBhY3RpdmVQcm9qZWN0ID0gb2JqO1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIiEhIGFjdGl2ZVByb2plY3Q6XCIsIGFjdGl2ZVByb2plY3QpXHJcbiAgICAgICAgICAgIHNlbGVjdGVkUHJvamVjdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWxlY3RlZFByb2plY3QnKVxyXG5cclxuICAgICAgICAgICAgLy9jb2RlIHRvIGxvYWQgbG9jYWwgc3RvcmFnZSBvZiBwcm9qZWN0IEFycmF5PyBha2EgdGFza3M/XHJcbiAgICAgICAgICAgIC8vIGlmKGxvY2FsU3RvcmFnZS5sZW5ndGggPiAwKSB7IFxyXG4gICAgICAgICAgICAvLyAgICAgcHJvamVjdExpYnJhcnkgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiYWN0aXZlUHJvamVjdC5wcm9qZWN0QXJyYXlcIikpO1xyXG4gICAgICAgICAgICAvLyAgIH1cclxuICAgICAgICAgICAgcmVuZGVyVGFza3MoYWN0aXZlUHJvamVjdCwgYWxsVGFza3MpO1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIC8vQnV0dG9uIHRvIGVkaXQgcHJvamVjdCB0aXRsZVxyXG4gICAgICAgIGxldCBlZGl0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgZWRpdC5pbm5lckhUTUwgPSAnPGkgY2xhc3M9XCJmYSBmYS1wZW5jaWxcIj48L2k+JztcclxuICAgICAgICBlZGl0LmNsYXNzTmFtZSA9IFwiZWRpdFwiO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGVkaXQub25jbGljayA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICBtb2RhbFByb2plY3Quc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuICAgICAgICAgICAgZWRpdC5pZCA9IHByb2plY3Q7XHJcbiAgICAgICAgICAgIGVkaXR0ZWRQcm9qZWN0ID0gb2JqLnByb2plY3ROYW1lO1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhvYmoucHJvamVjdE5hbWUpXHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiZWRpdHRlZFByb2plY3RcIiwgZWRpdHRlZFByb2plY3QpXHJcblxyXG4gICAgICAgICAgICByZXR1cm4gZWRpdHRlZFByb2plY3QgPSBlZGl0dGVkUHJvamVjdFxyXG4gICAgICAgICAgICAvLyBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInByb2plY3RMaWJyYXJ5XCIsIEpTT04uc3RyaW5naWZ5KHByb2plY3RMaWJyYXJ5KSk7XHJcbiAgICAgICAgICAgIC8vIHJlbmRlclByb2plY3RzKHByb2plY3RMaWJyYXJ5KVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIG5ld0VsZW1lbnQuYXBwZW5kQ2hpbGQoZWRpdCk7XHJcblxyXG4gICAgICAgIC8vQnV0dG9uIHRvIGRlbGV0ZSBwcm9qZWN0c1xyXG4gICAgICAgIGxldCBjbG9zZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgIC8vIGNsb3NlLmlubmVySFRNTCA9ICcmIzEyODQ2NSc7XHJcbiAgICAgICAgY2xvc2UuaW5uZXJIVE1MID0gJzxpIGNsYXNzPVwiZmEgZmEtdHJhc2gtb1wiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvaT4nO1xyXG4gICAgICAgIGNsb3NlLmNsYXNzTmFtZSA9IFwiZGVsZXRlXCI7XHJcbiAgICAgICAgLy8gY2xvc2UuaWQgPSBwcm9qZWN0LnByb2plY3ROYW1lO1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwicHJvamVjdC5wcm9qZWN0TmFtZVwiLCBwcm9qZWN0LnByb2plY3ROYW1lKVxyXG4gICAgICAgIC8vIG9iai5wcm9qZWN0TmFtZVxyXG4gICAgICAgIGNsb3NlLmlkID0gcHJvamVjdDtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhcInByb2plY3QgaGVyZVwiLCBwcm9qZWN0KVxyXG4gICAgICAgIGNsb3NlLm9uY2xpY2sgPSBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgY2xvc2VOYW1lID0gcHJvamVjdExpYnJhcnlbY2xvc2UuaWRdLnByb2plY3ROYW1lO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcImNsb3NlTmFtZTpcIiwgY2xvc2VOYW1lKVxyXG4gICAgICAgICAgICBwcm9qZWN0TGlicmFyeS5zcGxpY2UoY2xvc2UuaWQsMSk7XHJcbiAgICAgICAgICAgIGZvciAodGFzayBpbiBhbGxUYXNrcyl7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygndGFzay5wcm9qZWN0bmFtZSwnLCBhbGxUYXNrc1t0YXNrXS5wcm9qZWN0KVxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ29iaiBpZCcsIGNsb3NlTmFtZSlcclxuICAgICAgICAgICAgICAgIGlmIChhbGxUYXNrc1t0YXNrXS5wcm9qZWN0ID09IGNsb3NlTmFtZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ21hdGNoJylcclxuICAgICAgICAgICAgICAgICAgICBhbGxUYXNrcy5zcGxpY2UodGFzaywxKVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInByb2plY3RMaWJyYXJ5XCIsIEpTT04uc3RyaW5naWZ5KHByb2plY3RMaWJyYXJ5KSk7XHJcbiAgICAgICAgICAgIHJlbmRlclByb2plY3RzKHByb2plY3RMaWJyYXJ5KTtcclxuICAgICAgICAgICAgcmVuZGVyVGFza3MoYWN0aXZlUHJvamVjdCwgYWxsVGFza3MpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIG5ld0VsZW1lbnQuYXBwZW5kQ2hpbGQoY2xvc2UpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwicHJvamVjdExpYnJhcnlcIiwgSlNPTi5zdHJpbmdpZnkocHJvamVjdExpYnJhcnkpKTtcclxuICAgIH07XHJcbiAgICBcclxufTtcclxuXHJcbi8vRXZlbiBMaXN0ZW5lciBmb3IgQWRkIFByb2plY3QgQnV0dG9uXHJcbmxldCBhZGRQcm9qZWN0QnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhZGQtcHJvamVjdFwiKTtcclxuXHJcbmFkZFByb2plY3RCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICBsZXQgcHJvamVjdFRpdGxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcm9qZWN0LWZvcm1cIikudmFsdWU7XHJcbiAgICBpZiAocHJvamVjdExpYnJhcnkubGVuZ3RoIDwgMSl7cmV0dXJufTtcclxuICAgIC8vY2hlY2sgZm9yIGR1cGxpY2F0ZSBuYW1lc1xyXG4gICAgZm9yIChwcm9qZWN0IGluIHByb2plY3RMaWJyYXJ5KXtcclxuICAgICAgICBsZXQgb2JqID0gcHJvamVjdExpYnJhcnlbcHJvamVjdF07XHJcbiAgICAgICAgaWYgKG9iai5wcm9qZWN0TmFtZSA9PSBwcm9qZWN0VGl0bGUpe1xyXG4gICAgICAgICAgICBwcm9qZWN0VGl0bGUgPSBgJHtwcm9qZWN0VGl0bGV9LjFgO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBpZiAocHJvamVjdFRpdGxlID09IFwiXCIpe3JldHVybn1cclxuICAgIGxldCBuZXdQcm9qZWN0QXJyYXkgPSBbXTtcclxuICAgIGxldCBuZXdQcm9qZWN0ID0gYWRkUHJvamVjdChwcm9qZWN0VGl0bGUsIG5ld1Byb2plY3RBcnJheSk7XHJcblxyXG4gICAgbGV0IG9iaiA9IFwiXCI7XHJcbiAgICBhZGRQcm9qZWN0VG9MaWJyYXJ5KG5ld1Byb2plY3QpO1xyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJwcm9qZWN0TGlicmFyeVwiLCBKU09OLnN0cmluZ2lmeShwcm9qZWN0TGlicmFyeSkpO1xyXG4gICAgcmVuZGVyUHJvamVjdHMocHJvamVjdExpYnJhcnkpO1xyXG59KVxyXG5cclxuXHJcbi8vQWRkIFByb2plY3QgTW9kYWxcclxubGV0IG1vZGFsUHJvamVjdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibW9kYWwtcHJvamVjdFwiKTtcclxubGV0IGVkaXRQcm9qZWN0QnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzdWJtaXQtcHJvamVjdFwiKTtcclxubGV0IHByb2plY3RTcGFuID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcInNwYW5cIilbMF07XHJcblxyXG5wcm9qZWN0U3Bhbi5vbmNsaWNrID0gZnVuY3Rpb24oKSB7XHJcbiAgICBtb2RhbFByb2plY3Quc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG59XHJcblxyXG53aW5kb3cub25jbGljayA9IGZ1bmN0aW9uKGV2ZW50KSB7XHJcbiAgaWYgKGV2ZW50LnRhcmdldCA9PSBtb2RhbFByb2plY3QpIHtcclxuICAgIG1vZGFsUHJvamVjdC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgfVxyXG59XHJcblxyXG5lZGl0UHJvamVjdEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgIGxldCBlZGl0dGVkVmFsdWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVkaXQtcHJvamVjdFwiKS52YWx1ZTtcclxuICAgIGlmIChlZGl0dGVkVmFsdWUgPT0gXCJcIil7XHJcbiAgICAgICAgcmV0dXJuXHJcbiAgICB9XHJcbiAgICBcclxuICAgIGxldCBjaGFuZ2VQcm9qZWN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoZWRpdHRlZFByb2plY3QpO1xyXG4gICAgbGV0IHByb2plY3RJRCA9IGNoYW5nZVByb2plY3QuaWQ7XHJcblxyXG5cclxuICAgIGZvciAocHJvamVjdCBpbiBwcm9qZWN0TGlicmFyeSl7XHJcbiAgICAgICAgbGV0IG9iaiA9IHByb2plY3RMaWJyYXJ5W3Byb2plY3RdO1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKG9iai5wcm9qZWN0TmFtZSlcclxuICAgICAgICBpZiAob2JqLnByb2plY3ROYW1lID09IHByb2plY3RJRCl7XHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwibWF0Y2hcIilcclxuICAgICAgICAgICAgLy8gb2JqLmlubmVySFRNTCA9IGVkaXR0ZWRWYWx1ZTtcclxuICAgICAgICAgICAgb2JqLnByb2plY3ROYW1lID0gZWRpdHRlZFZhbHVlO1xyXG4gICAgICAgICAgICAvLyBvYmouaWQgPSBlZGl0dGVkVmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAgICAgY29uc29sZS5sb2coXCJwcm9qZWN0IElEOlwiLCBwcm9qZWN0SUQpXHJcbiAgICAgICAgY29uc29sZS5sb2coXCJlZGl0dGVkVmFsdWU6LFwiLCBlZGl0dGVkVmFsdWUpXHJcblxyXG4gICAgZm9yICh0YXNrIGluIGFsbFRhc2tzKXtcclxuICAgICAgICBjb25zb2xlLmxvZygndGFzay5wcm9qZWN0bmFtZSwnLCBhbGxUYXNrc1t0YXNrXS5wcm9qZWN0KVxyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCdvYmogaWQnLCBlZGl0dGVkUHJvamVjdClcclxuICAgICAgICAvLyBjb25zb2xlLmxvZygncHJvamVjdCcsIHByb2plY3QpXHJcbiAgICAgICAgaWYgKGFsbFRhc2tzW3Rhc2tdLnByb2plY3QgPT0gcHJvamVjdElEKXtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ21hdGNoJylcclxuICAgICAgICAgICAgYWxsVGFza3NbdGFza10ucHJvamVjdCA9IGVkaXR0ZWRWYWx1ZVxyXG4gICAgICAgIH19XHJcblxyXG5cclxuXHJcbiAgICAvLyBjb25zb2xlLmxvZyhwcm9qZWN0TGlicmFyeSlcclxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiYWxsVGFza3NcIiwgSlNPTi5zdHJpbmdpZnkoYWxsVGFza3MpKTtcclxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwicHJvamVjdExpYnJhcnlcIiwgSlNPTi5zdHJpbmdpZnkocHJvamVjdExpYnJhcnkpKTtcclxuICAgIHJlbmRlclRhc2tzKGFjdGl2ZVByb2plY3QsIGFsbFRhc2tzKTtcclxuICAgIHJlbmRlclByb2plY3RzKHByb2plY3RMaWJyYXJ5KVxyXG4gICAgbW9kYWxQcm9qZWN0LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxufSk7XHJcblxyXG4vL0V2ZW50IExpc3RlbmVyIGZvciBcImFkZFRhc2tCdG5cIlxyXG5cclxubGV0IGFkZFRhc2tCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFkZFRhc2tCdG5cIik7XHJcblxyXG5hZGRUYXNrQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgLy9HZXQgdGFzayBmcm9tIHRoZSBmb3JtXHJcbiAgICBsZXQgdGFza1RpdGxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJuZXctdGFzay1mb3JtXCIpLnZhbHVlO1xyXG4gICAgbGV0IHByaW9yaXR5ID0gcHJpb3JpdHlWYWx1ZTtcclxuICAgIC8vV2lsbCBuZWVkIHRvIHJlZm9ybWF0IGhvdyBpdCBnZXRzIGRhdGEgZnJvbSBcImRhdGVcIlxyXG4gICAgbGV0IGRhdGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRhdGVcIikuaW5uZXJIVE1MO1xyXG4gICAgbGV0IG5vdGVzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJub3Rlcy1pbnB1dFwiKS52YWx1ZTtcclxuXHJcbiAgICAvLyBpZiAoLmxlbmd0aCA8IDEpe3JldHVybn07XHJcbiAgICAvL0RvIEkgbmVlZCBhIGxlbmd0aCBjaGVjayB0aGVyZT8gXl5cclxuXHJcbiAgICAvL01ha2Ugc3VyZSBmb3JtIGlzbid0IGVtcHR5XHJcbiAgICBpZiAodGFza1RpdGxlID09IFwiXCIpe1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdUYXNrIFRpdGxlIGlzIGJsYW5rJylcclxuICAgICAgICByZXR1cm59XHJcbiAgICBpZiAoYWN0aXZlUHJvamVjdCA9PSBhbGxUYXNrc1RhYil7XHJcbiAgICAgICAgYWxlcnQoXCJQbGVhc2Ugc2VsZWN0IGEgUHJvamVjdCB0byBhZGQgVG8tRG8gdG8uXCIpXHJcbiAgICAgICAgcmV0dXJuXHJcbiAgICB9XHJcblxyXG4gICAgLy9jaGVjayBmb3IgZHVwbGljYXRlIG5hbWVzXHJcbiAgICAvLyBmb3IgKGxldCB0YXNrIGluIGFjdGl2ZVByb2plY3QucHJvamVjdEFycmF5KXtcclxuICAgIC8vICAgICBsZXQgb2JqID0gYWN0aXZlUHJvamVjdC5wcm9qZWN0QXJyYXlbdGFza107XHJcbiAgICAvLyAgICAgaWYgKG9iai50YXNrTmFtZSA9PSB0YXNrVGl0bGUpe1xyXG4gICAgLy8gICAgICAgICB0YXNrVGl0bGUgPSBgJHt0YXNrVGl0bGV9LjFgO1xyXG4gICAgLy8gICAgIH1cclxuICAgIC8vIH1cclxuICAgIGZvciAodGFzayBpbiBhbGxUYXNrcyl7XHJcbiAgICAgICAgaWYgKHRhc2sgPT0gdGFza1RpdGxlKXtcclxuICAgICAgICAgICAgdGFza1RpdGxlID0gYCR7dGFza1RpdGxlfS4xYDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBcclxuICAgIC8vIGxldCBuZXdQcm9qZWN0QXJyYXkgPSBbXTtcclxuICAgIGxldCBuZXdUYXNrID0gYWRkVGFzayh0YXNrVGl0bGUsIGFjdGl2ZVByb2plY3QucHJvamVjdE5hbWUsIHByaW9yaXR5LCBkYXRlLCBub3Rlcyk7XHJcblxyXG4gICAgYWRkVGFza1RvUHJvamVjdChuZXdUYXNrKTtcclxuICAgIC8vXHJcbiAgICAvLyBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImFjdGl2ZVByb2plY3QucHJvamVjdEFycmF5XCIsIEpTT04uc3RyaW5naWZ5KGFjdGl2ZVByb2plY3QucHJvamVjdEFycmF5KSk7XHJcbiAgICByZW5kZXJUYXNrcyhhY3RpdmVQcm9qZWN0LCBhbGxUYXNrcyk7XHJcbiAgICAvL0kgdGhpbmsgdGhpcyBpcyBpbXBvcnRhbnQgdG8gaGF2ZVxyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJhbGxUYXNrc1wiLCBKU09OLnN0cmluZ2lmeShhbGxUYXNrcykpO1xyXG4gICAgLy8gY29uc29sZS5sb2coXCJBbGwgVGFza3M6XCIsIGFsbFRhc2tzKVxyXG4gICAgLy8gY29uc29sZS5sb2coXCJQcm9qZWN0IExpYnJhcnk6XCIsIHByb2plY3RMaWJyYXJ5KVxyXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJwcm9qZWN0TGlicmFyeVwiLCBKU09OLnN0cmluZ2lmeShwcm9qZWN0TGlicmFyeSkpO1xyXG59KTtcclxuXHJcblxyXG4vL2FkZCBldmVudCBsaXN0ZW5lcnMgZm9yIGFsbCBcInByb2plY3RcIiBjbGFzcywgd2hlbiB5b3UgY2xpY2sgb24gaXQgc3R5bGUgY2hhbmdlcyB0byBzZWxlY3RlZCwgcmVtb3ZlcyBzZWxlY3RlZCBmcm9tIG90aGVycywgYW5kIFxyXG5cclxuXHJcbi8vbmVlZCBhbiBhcnJheSBvZiBhbGwgZXhpc3RpbmcgXCJwcm9qZWN0c1wiIGFzIG9iamVjdHNcclxuXHJcblxyXG4vL3dpbGwgbmVlZCBhbiBhcnJheSBvZiBhbGwgZXhpc3RpbmcgdG8tZG8ncyBhcyBvYmplY3RzXHJcblxyXG5sZXQgcHJvamVjdExpYnJhcnkgPSBnZXRQcm9qZWN0TGlicmFyeSgpO1xyXG5cclxuLy9yZW5kZXJcclxucmVuZGVyUHJvamVjdHMocHJvamVjdExpYnJhcnkpO1xyXG5cclxuLy8gY29uc29sZS5sb2coXCJJbmRleCBBY3RpdmUgUHJvamVjdDpcIiwgYWN0aXZlUHJvamVjdCwgXCItSW5kZXggcHJvamVjdEFycmF5OlwiLCBhY3RpdmVQcm9qZWN0LnByb2plY3RBcnJheSlcclxuLy8gcmVuZGVyVGFza3MoYWN0aXZlUHJvamVjdCwgYWN0aXZlUHJvamVjdC5wcm9qZWN0QXJyYXkpO1xyXG5yZW5kZXJUYXNrcyhhY3RpdmVQcm9qZWN0LCBhbGxUYXNrcyk7XHJcbi8vcmVuZGVyVG9kb3ModG9kb0xpYnJhcnkpOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/tasks.js":
/*!**********************!*\
  !*** ./src/tasks.js ***!
  \**********************/
/*! exports provided: renderTasks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"renderTasks\", function() { return renderTasks; });\n// import { compareAsc, format } from 'date-fns'\r\n\r\n// format(new Date(2014, 1, 11), 'yyyy-MM-dd')\r\n\r\n//format for \"getTaskList\"\r\n//I think the local storage should be done through index.js (the tasks should be stored witht hte project right? In the projectArray?)\r\n\r\n// let projectIndex = localStorage.projectIndex || 0;\r\n\r\nfunction renderTasks(activeProject, tasksArr){\r\n    console.log('test renderTasks')\r\n    let todoContent = document.getElementById(\"todo-content\");\r\n\r\n    function clearTasks(){\r\n        todoContent.innerHTML = '';\r\n    };\r\n    clearTasks();\r\n    //May only need active project and then can get tasksArr from there?\r\n    \r\n    console.log(\"Active Project:\", activeProject)\r\n    console.log(\"!tasksArr:2\", tasksArr)\r\n\r\n    if(todoContent.length === 0) {\r\n        console.log(\"todoContent length equals zero!\")\r\n        return\r\n      };\r\n\r\n\r\n    if(tasksArr == null){\r\n        console.log(\"tasksArr equals null!\")\r\n        return\r\n    };\r\n\r\n    for (let task in tasksArr){\r\n        let obj = tasksArr[task];\r\n        console.log(\"obj:\", obj)\r\n        console.log(\"activeProject4\", activeProject.projectName)\r\n        if ((obj.project == activeProject.projectName) || (activeProject.projectName == \"all\")){\r\n            console.log(\"Match\")\r\n            let newElement = document.createElement('div');\r\n            newElement.className = obj.taskName;\r\n            newElement.classList.add(\"box\");\r\n            todoContent.appendChild(newElement);\r\n    \r\n            let taskTitle = document.createElement('div');\r\n            taskTitle.innerHTML = obj.taskName;\r\n            taskTitle.classList.add(obj.taskName);\r\n            taskTitle.classList.add(\"task\");\r\n            newElement.appendChild(taskTitle);\r\n    \r\n            let priorityDisp = document.createElement('div');\r\n            priorityDisp.innerHTML = obj.priority;\r\n            priorityDisp.classList.add(obj.priority);\r\n            priorityDisp.classList.add(\"priorityDisplay\");\r\n            newElement.appendChild(priorityDisp);\r\n    \r\n            let dateDisp = document.createElement('div');\r\n            dateDisp.innerHTML = obj.date;\r\n            dateDisp.classList.add(\"dateDisplay\");\r\n            newElement.appendChild(dateDisp);\r\n    \r\n            let noteDisp = document.createElement('div');\r\n            noteDisp.innerHTML = obj.notes;\r\n            noteDisp.classList.add(\"noteDisplay\");\r\n            newElement.appendChild(noteDisp);\r\n\r\n            let closeTask = document.createElement('div');\r\n            closeTask.innerHTML = '<i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>';\r\n            closeTask.className = \"delete deleteTask\";\r\n            closeTask.id = task;\r\n\r\n            closeTask.onclick = function() {\r\n                tasksArr.splice(closeTask.id,1);\r\n                allTasks = tasksArr\r\n                // for (task in allTasks){\r\n                //     console.log('task.projectname,', allTasks[task].taskName)\r\n                //     console.log('obj id', closeName)\r\n                //     if (allTasks[task].taskname == closeName){\r\n                //         console.log('match')\r\n                //         allTasks.splice(task,1)\r\n                //     }\r\n                // }\r\n                // if(allTasks.some(task => task.projectName == close.id)){\r\n                //     alert(`${close.id} found inside the array.`);\r\n                // } else{\r\n                    \r\n                //     alert(`${close.id} NOT found inside the array.`);\r\n                // }\r\n    \r\n                localStorage.setItem(\"allTasks\", JSON.stringify(allTasks));\r\n                renderTasks(activeProject, allTasks);\r\n              }\r\n            newElement.appendChild(closeTask);\r\n        }\r\n\r\n    };\r\n    // const removeTodo = (todoID) => {\r\n    //     const index = todos.findIndex(todo => {\r\n    //         return todo.getTodoID() === todoID;\r\n    //     })\r\n\r\n    //     todos.splice(index, 1);\r\n    // }\r\n    \r\n    // const exportForLocalStorage = () => {\r\n    //     const todosForExport = todos.map(todo => todo.exportForLocalStorage());\r\n\r\n    //     return {\r\n    //         name,\r\n    //         todos: todosForExport\r\n    //     };\r\n    // }\r\n    // return {\r\n    //     removeTodo,\r\n    //     exportForLocalStorage\r\n    // };\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdGFza3MuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvdGFza3MuanM/NDA3YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpbXBvcnQgeyBjb21wYXJlQXNjLCBmb3JtYXQgfSBmcm9tICdkYXRlLWZucydcclxuXHJcbi8vIGZvcm1hdChuZXcgRGF0ZSgyMDE0LCAxLCAxMSksICd5eXl5LU1NLWRkJylcclxuXHJcbi8vZm9ybWF0IGZvciBcImdldFRhc2tMaXN0XCJcclxuLy9JIHRoaW5rIHRoZSBsb2NhbCBzdG9yYWdlIHNob3VsZCBiZSBkb25lIHRocm91Z2ggaW5kZXguanMgKHRoZSB0YXNrcyBzaG91bGQgYmUgc3RvcmVkIHdpdGh0IGh0ZSBwcm9qZWN0IHJpZ2h0PyBJbiB0aGUgcHJvamVjdEFycmF5PylcclxuXHJcbi8vIGxldCBwcm9qZWN0SW5kZXggPSBsb2NhbFN0b3JhZ2UucHJvamVjdEluZGV4IHx8IDA7XHJcblxyXG5mdW5jdGlvbiByZW5kZXJUYXNrcyhhY3RpdmVQcm9qZWN0LCB0YXNrc0Fycil7XHJcbiAgICBjb25zb2xlLmxvZygndGVzdCByZW5kZXJUYXNrcycpXHJcbiAgICBsZXQgdG9kb0NvbnRlbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRvZG8tY29udGVudFwiKTtcclxuXHJcbiAgICBmdW5jdGlvbiBjbGVhclRhc2tzKCl7XHJcbiAgICAgICAgdG9kb0NvbnRlbnQuaW5uZXJIVE1MID0gJyc7XHJcbiAgICB9O1xyXG4gICAgY2xlYXJUYXNrcygpO1xyXG4gICAgLy9NYXkgb25seSBuZWVkIGFjdGl2ZSBwcm9qZWN0IGFuZCB0aGVuIGNhbiBnZXQgdGFza3NBcnIgZnJvbSB0aGVyZT9cclxuICAgIFxyXG4gICAgY29uc29sZS5sb2coXCJBY3RpdmUgUHJvamVjdDpcIiwgYWN0aXZlUHJvamVjdClcclxuICAgIGNvbnNvbGUubG9nKFwiIXRhc2tzQXJyOjJcIiwgdGFza3NBcnIpXHJcblxyXG4gICAgaWYodG9kb0NvbnRlbnQubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJ0b2RvQ29udGVudCBsZW5ndGggZXF1YWxzIHplcm8hXCIpXHJcbiAgICAgICAgcmV0dXJuXHJcbiAgICAgIH07XHJcblxyXG5cclxuICAgIGlmKHRhc2tzQXJyID09IG51bGwpe1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwidGFza3NBcnIgZXF1YWxzIG51bGwhXCIpXHJcbiAgICAgICAgcmV0dXJuXHJcbiAgICB9O1xyXG5cclxuICAgIGZvciAobGV0IHRhc2sgaW4gdGFza3NBcnIpe1xyXG4gICAgICAgIGxldCBvYmogPSB0YXNrc0Fyclt0YXNrXTtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIm9iajpcIiwgb2JqKVxyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiYWN0aXZlUHJvamVjdDRcIiwgYWN0aXZlUHJvamVjdC5wcm9qZWN0TmFtZSlcclxuICAgICAgICBpZiAoKG9iai5wcm9qZWN0ID09IGFjdGl2ZVByb2plY3QucHJvamVjdE5hbWUpIHx8IChhY3RpdmVQcm9qZWN0LnByb2plY3ROYW1lID09IFwiYWxsXCIpKXtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJNYXRjaFwiKVxyXG4gICAgICAgICAgICBsZXQgbmV3RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgICAgICBuZXdFbGVtZW50LmNsYXNzTmFtZSA9IG9iai50YXNrTmFtZTtcclxuICAgICAgICAgICAgbmV3RWxlbWVudC5jbGFzc0xpc3QuYWRkKFwiYm94XCIpO1xyXG4gICAgICAgICAgICB0b2RvQ29udGVudC5hcHBlbmRDaGlsZChuZXdFbGVtZW50KTtcclxuICAgIFxyXG4gICAgICAgICAgICBsZXQgdGFza1RpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgICAgIHRhc2tUaXRsZS5pbm5lckhUTUwgPSBvYmoudGFza05hbWU7XHJcbiAgICAgICAgICAgIHRhc2tUaXRsZS5jbGFzc0xpc3QuYWRkKG9iai50YXNrTmFtZSk7XHJcbiAgICAgICAgICAgIHRhc2tUaXRsZS5jbGFzc0xpc3QuYWRkKFwidGFza1wiKTtcclxuICAgICAgICAgICAgbmV3RWxlbWVudC5hcHBlbmRDaGlsZCh0YXNrVGl0bGUpO1xyXG4gICAgXHJcbiAgICAgICAgICAgIGxldCBwcmlvcml0eURpc3AgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICAgICAgcHJpb3JpdHlEaXNwLmlubmVySFRNTCA9IG9iai5wcmlvcml0eTtcclxuICAgICAgICAgICAgcHJpb3JpdHlEaXNwLmNsYXNzTGlzdC5hZGQob2JqLnByaW9yaXR5KTtcclxuICAgICAgICAgICAgcHJpb3JpdHlEaXNwLmNsYXNzTGlzdC5hZGQoXCJwcmlvcml0eURpc3BsYXlcIik7XHJcbiAgICAgICAgICAgIG5ld0VsZW1lbnQuYXBwZW5kQ2hpbGQocHJpb3JpdHlEaXNwKTtcclxuICAgIFxyXG4gICAgICAgICAgICBsZXQgZGF0ZURpc3AgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICAgICAgZGF0ZURpc3AuaW5uZXJIVE1MID0gb2JqLmRhdGU7XHJcbiAgICAgICAgICAgIGRhdGVEaXNwLmNsYXNzTGlzdC5hZGQoXCJkYXRlRGlzcGxheVwiKTtcclxuICAgICAgICAgICAgbmV3RWxlbWVudC5hcHBlbmRDaGlsZChkYXRlRGlzcCk7XHJcbiAgICBcclxuICAgICAgICAgICAgbGV0IG5vdGVEaXNwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgICAgIG5vdGVEaXNwLmlubmVySFRNTCA9IG9iai5ub3RlcztcclxuICAgICAgICAgICAgbm90ZURpc3AuY2xhc3NMaXN0LmFkZChcIm5vdGVEaXNwbGF5XCIpO1xyXG4gICAgICAgICAgICBuZXdFbGVtZW50LmFwcGVuZENoaWxkKG5vdGVEaXNwKTtcclxuXHJcbiAgICAgICAgICAgIGxldCBjbG9zZVRhc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICAgICAgY2xvc2VUYXNrLmlubmVySFRNTCA9ICc8aSBjbGFzcz1cImZhIGZhLXRyYXNoLW9cIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+JztcclxuICAgICAgICAgICAgY2xvc2VUYXNrLmNsYXNzTmFtZSA9IFwiZGVsZXRlIGRlbGV0ZVRhc2tcIjtcclxuICAgICAgICAgICAgY2xvc2VUYXNrLmlkID0gdGFzaztcclxuXHJcbiAgICAgICAgICAgIGNsb3NlVGFzay5vbmNsaWNrID0gZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICB0YXNrc0Fyci5zcGxpY2UoY2xvc2VUYXNrLmlkLDEpO1xyXG4gICAgICAgICAgICAgICAgYWxsVGFza3MgPSB0YXNrc0FyclxyXG4gICAgICAgICAgICAgICAgLy8gZm9yICh0YXNrIGluIGFsbFRhc2tzKXtcclxuICAgICAgICAgICAgICAgIC8vICAgICBjb25zb2xlLmxvZygndGFzay5wcm9qZWN0bmFtZSwnLCBhbGxUYXNrc1t0YXNrXS50YXNrTmFtZSlcclxuICAgICAgICAgICAgICAgIC8vICAgICBjb25zb2xlLmxvZygnb2JqIGlkJywgY2xvc2VOYW1lKVxyXG4gICAgICAgICAgICAgICAgLy8gICAgIGlmIChhbGxUYXNrc1t0YXNrXS50YXNrbmFtZSA9PSBjbG9zZU5hbWUpe1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICBjb25zb2xlLmxvZygnbWF0Y2gnKVxyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICBhbGxUYXNrcy5zcGxpY2UodGFzaywxKVxyXG4gICAgICAgICAgICAgICAgLy8gICAgIH1cclxuICAgICAgICAgICAgICAgIC8vIH1cclxuICAgICAgICAgICAgICAgIC8vIGlmKGFsbFRhc2tzLnNvbWUodGFzayA9PiB0YXNrLnByb2plY3ROYW1lID09IGNsb3NlLmlkKSl7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgYWxlcnQoYCR7Y2xvc2UuaWR9IGZvdW5kIGluc2lkZSB0aGUgYXJyYXkuYCk7XHJcbiAgICAgICAgICAgICAgICAvLyB9IGVsc2V7XHJcbiAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgYWxlcnQoYCR7Y2xvc2UuaWR9IE5PVCBmb3VuZCBpbnNpZGUgdGhlIGFycmF5LmApO1xyXG4gICAgICAgICAgICAgICAgLy8gfVxyXG4gICAgXHJcbiAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImFsbFRhc2tzXCIsIEpTT04uc3RyaW5naWZ5KGFsbFRhc2tzKSk7XHJcbiAgICAgICAgICAgICAgICByZW5kZXJUYXNrcyhhY3RpdmVQcm9qZWN0LCBhbGxUYXNrcyk7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBuZXdFbGVtZW50LmFwcGVuZENoaWxkKGNsb3NlVGFzayk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH07XHJcbiAgICAvLyBjb25zdCByZW1vdmVUb2RvID0gKHRvZG9JRCkgPT4ge1xyXG4gICAgLy8gICAgIGNvbnN0IGluZGV4ID0gdG9kb3MuZmluZEluZGV4KHRvZG8gPT4ge1xyXG4gICAgLy8gICAgICAgICByZXR1cm4gdG9kby5nZXRUb2RvSUQoKSA9PT0gdG9kb0lEO1xyXG4gICAgLy8gICAgIH0pXHJcblxyXG4gICAgLy8gICAgIHRvZG9zLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAvLyB9XHJcbiAgICBcclxuICAgIC8vIGNvbnN0IGV4cG9ydEZvckxvY2FsU3RvcmFnZSA9ICgpID0+IHtcclxuICAgIC8vICAgICBjb25zdCB0b2Rvc0ZvckV4cG9ydCA9IHRvZG9zLm1hcCh0b2RvID0+IHRvZG8uZXhwb3J0Rm9yTG9jYWxTdG9yYWdlKCkpO1xyXG5cclxuICAgIC8vICAgICByZXR1cm4ge1xyXG4gICAgLy8gICAgICAgICBuYW1lLFxyXG4gICAgLy8gICAgICAgICB0b2RvczogdG9kb3NGb3JFeHBvcnRcclxuICAgIC8vICAgICB9O1xyXG4gICAgLy8gfVxyXG4gICAgLy8gcmV0dXJuIHtcclxuICAgIC8vICAgICByZW1vdmVUb2RvLFxyXG4gICAgLy8gICAgIGV4cG9ydEZvckxvY2FsU3RvcmFnZVxyXG4gICAgLy8gfTtcclxufTtcclxuXHJcbmV4cG9ydHtyZW5kZXJUYXNrc30iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/tasks.js\n");

/***/ })

/******/ });