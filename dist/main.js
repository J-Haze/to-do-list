/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const { renderTasks } = __webpack_require__(/*! ./tasks */ \"./src/tasks.js\");\r\n\r\nconsole.log(\"check webpack3\")\r\n\r\n//Checks that Local Storage is available\r\nfunction storageAvailable(type) {\r\n    var storage;\r\n    try {\r\n        storage = window[type];\r\n        var x = '__storage_test__';\r\n        storage.setItem(x, x);\r\n        storage.removeItem(x);\r\n        return true;\r\n    }\r\n    catch(e) {\r\n        return e instanceof DOMException && (\r\n            // everything except Firefox\r\n            e.code === 22 ||\r\n            // Firefox\r\n            e.code === 1014 ||\r\n            // test name field too, because code might not be present\r\n            // everything except Firefox\r\n            e.name === 'QuotaExceededError' ||\r\n            // Firefox\r\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\r\n            // acknowledge QuotaExceededError only if there's something already stored\r\n            (storage && storage.length !== 0);\r\n    }\r\n}\r\n\r\n//Alerts if Local Storage is not available\r\nif (storageAvailable('localStorage')) {\r\n    console.log(\"Local Storage Available\");\r\n  }\r\n  else {\r\n    alert(\"Local Storage Unavailable\");\r\n  }\r\n\r\n\r\n//Initialize project libarary\r\nfunction getProjectLibrary() {\r\n    let projectLibrary = [];\r\n    let storedLibrary = JSON.parse(localStorage.getItem(\"projectLibrary\"));\r\n    if(storedLibrary.length > 0) { \r\n        projectLibrary = storedLibrary;\r\n    }\r\n    return projectLibrary;\r\n  };\r\n\r\nfunction getAllTasks() {\r\n    let allTasks = [];\r\n    let storedTasks = JSON.parse(localStorage.getItem(\"allTasks\"));\r\n    if (storedTasks == null){\r\n        allTasks = [];\r\n        return allTasks\r\n    }\r\n    if(storedTasks.length > 0) { \r\n        allTasks = storedTasks;\r\n    }\r\n    return allTasks;\r\n  };\r\n\r\n\r\n//Factory Function to create Projects\r\nconst addProject = (projectName, projectArray) => {\r\n    return { \r\n        projectName: projectName,\r\n        projectArray: projectArray\r\n    }\r\n  };\r\n\r\n//Factory Function to create Task\r\nconst addTask = (taskName, project, priority, date, notes, done) => {\r\nreturn { \r\n    taskName: taskName,\r\n    project: project,\r\n    priority: priority,\r\n    date: date,\r\n    notes: notes,\r\n    done: done\r\n}\r\n};\r\n\r\nlet allTasks = getAllTasks();\r\n\r\nlet allTasksTab = addProject(\"all\", allTasks);\r\n\r\n// let edittedObject = \"\";\r\nlet activeProject = allTasksTab;\r\n\r\n//Adds new project to the \"projectLibrary\"\r\nfunction addProjectToLibrary(addProject) {\r\n    projectLibrary.push(addProject);\r\n}\r\n\r\n//Adds new Task to Project\r\nfunction addTaskToProject(newTask) {\r\n    if (activeProject.projectArray == undefined){\r\n        activeProject.projectArray = newTask;\r\n        allTasks = newTask;\r\n    }\r\n    activeProject.projectArray.push(newTask);\r\n    allTasks.push(newTask);\r\n}\r\n\r\n//Script for priority\r\nlet priorityValue = \"low\";\r\n\r\nlet lowBtn = document.getElementById(\"lowBtn\");\r\nlet mediumBtn = document.getElementById(\"mediumBtn\");\r\nlet highBtn = document.getElementById(\"highBtn\");\r\n\r\nlowBtn.onclick = function() {\r\n    lowBtn.classList.add(\"lowSelected\");\r\n    mediumBtn.classList.remove(\"mediumSelected\");\r\n    highBtn.classList.remove(\"highSelected\");\r\n    priorityValue = \"low\";\r\n};\r\n\r\nmediumBtn.onclick = function() {\r\n    lowBtn.classList.remove(\"lowSelected\");\r\n    mediumBtn.classList.add(\"mediumSelected\");\r\n    highBtn.classList.remove(\"highSelected\");\r\n    priorityValue = \"medium\";\r\n};\r\n\r\nhighBtn.onclick = function() {\r\n    lowBtn.classList.remove(\"lowSelected\");\r\n    mediumBtn.classList.remove(\"mediumSelected\");\r\n    highBtn.classList.add(\"highSelected\");\r\n    priorityValue = \"high\";\r\n};\r\n\r\n//Creates new div with the new project object\r\nlet projectsContent = document.getElementById(\"projects-content\");\r\n\r\nfunction clearProjectLibrary(){\r\n    projectsContent.innerHTML = '';\r\n}\r\n\r\nfunction renderProjects(projectLibrary){\r\n    clearProjectLibrary();\r\n    \r\n    if(projectsContent.length == 0) {\r\n        return\r\n      }\r\n    // console.log(projectLibrary.length)\r\n      if(projectLibrary.length == 0){\r\n        return\r\n    }\r\n\r\n    let allTodos = document.getElementById(\"projects-header\");\r\n    let selectedProject = document.querySelector('.selectedProject')\r\n    allTodos.onclick = function() {\r\n        if (selectedProject != null){\r\n            selectedProject.classList.remove(\"selectedProject\");\r\n        }\r\n        allTodos.classList.add(\"selectedProject\");\r\n        activeProject = allTasksTab;\r\n        selectedProject = document.querySelector('.selectedProject');\r\n        renderTasks(activeProject, allTasks);\r\n    };\r\n\r\n    // let allProjects = document.getElementsByClassName('project');\r\n    // let selectedProject = allProjects.getElementByClassName(\"selectedProject\")\r\n    \r\n    //!!This \"project\" is where the issue is?\r\n    // console.log(projectLibrary)\r\n    for (let project in projectLibrary) {\r\n        // console.log(projectLibrary[project])\r\n        let obj = projectLibrary[project];\r\n        let newElement = document.createElement('div');\r\n        newElement.innerHTML = obj.projectName;\r\n        newElement.id = obj.projectName;\r\n        newElement.className = \"project\";\r\n        projectsContent.appendChild(newElement);\r\n\r\n        //Event Listener for selecting the active project\r\n        newElement.onclick = function() {\r\n            if (selectedProject != null){\r\n                selectedProject.classList.remove(\"selectedProject\");\r\n            }\r\n\r\n            newElement.classList.add(\"selectedProject\");\r\n            // activeProject = obj.projectName;\r\n            // console.log(\"obj before activeProj:\", obj)\r\n            // console.log(\"obj.projectArr before activeProj:\", obj.projectArray)\r\n            activeProject = obj;\r\n            // console.log(\"!! activeProject:\", activeProject)\r\n            selectedProject = document.querySelector('.selectedProject')\r\n\r\n            //code to load local storage of project Array? aka tasks?\r\n            // if(localStorage.length > 0) { \r\n            //     projectLibrary = JSON.parse(localStorage.getItem(\"activeProject.projectArray\"));\r\n            //   }\r\n            renderTasks(activeProject, allTasks);\r\n        };\r\n\r\n        //Button to edit project title\r\n        let edit = document.createElement('div');\r\n        edit.innerHTML = '<i class=\"fa fa-pencil\"></i>';\r\n        edit.className = \"edit\";\r\n        \r\n        edit.onclick = function() {\r\n            modalProject.style.display = \"block\";\r\n            edit.id = project;\r\n            edittedProject = obj.projectName;\r\n            // console.log(obj.projectName)\r\n\r\n            return edittedProject = edittedProject\r\n            // localStorage.setItem(\"projectLibrary\", JSON.stringify(projectLibrary));\r\n            // renderProjects(projectLibrary)\r\n          }\r\n        newElement.appendChild(edit);\r\n\r\n        //Button to delete projects\r\n        let close = document.createElement('div');\r\n        // close.innerHTML = '&#128465';\r\n        close.innerHTML = '<i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>';\r\n        close.className = \"delete\";\r\n        // close.id = project.projectName;\r\n        // console.log(\"project.projectName\", project.projectName)\r\n        // obj.projectName\r\n        close.id = project;\r\n        // console.log(\"project here\", project)\r\n        close.onclick = function() {\r\n            closeName = projectLibrary[close.id].projectName;\r\n            console.log(\"closeName:\", closeName)\r\n            projectLibrary.splice(close.id,1);\r\n            for (task in allTasks){\r\n                console.log('task.projectname,', allTasks[task].project)\r\n                console.log('obj id', closeName)\r\n                if (allTasks[task].project == closeName){\r\n                    console.log('match')\r\n                    allTasks.splice(task,1)\r\n                }\r\n            }\r\n\r\n            localStorage.setItem(\"projectLibrary\", JSON.stringify(projectLibrary));\r\n            renderProjects(projectLibrary);\r\n            renderTasks(activeProject, allTasks);\r\n          }\r\n        newElement.appendChild(close);\r\n        \r\n        // localStorage.setItem(\"projectLibrary\", JSON.stringify(projectLibrary));\r\n    };\r\n    \r\n};\r\n\r\n//Even Listener for Add Project Button\r\nlet addProjectBtn = document.getElementById(\"add-project\");\r\n\r\naddProjectBtn.addEventListener('click', () => {\r\n    let projectTitle = document.getElementById(\"project-form\").value;\r\n    if (projectLibrary.length < 1){return};\r\n    //check for duplicate names\r\n    for (project in projectLibrary){\r\n        let obj = projectLibrary[project];\r\n        if (obj.projectName == projectTitle){\r\n            projectTitle = `${projectTitle}.1`;\r\n        }\r\n    }\r\n\r\n    if (projectTitle == \"\"){return}\r\n    let newProjectArray = [];\r\n    let newProject = addProject(projectTitle, newProjectArray);\r\n\r\n    let obj = \"\";\r\n    addProjectToLibrary(newProject);\r\n    localStorage.setItem(\"projectLibrary\", JSON.stringify(projectLibrary));\r\n    renderProjects(projectLibrary);\r\n})\r\n\r\n//Add Project Modal\r\nlet modalProject = document.getElementById(\"modal-project\");\r\nlet editProjectBtn = document.getElementById(\"submit-project\");\r\nlet projectSpan = document.getElementsByClassName(\"span\")[0];\r\n\r\nprojectSpan.onclick = function() {\r\n    modalProject.style.display = \"none\";\r\n}\r\n\r\nwindow.onclick = function(event) {\r\n  if (event.target == modalProject) {\r\n    modalProject.style.display = \"none\";\r\n  }\r\n}\r\n\r\neditProjectBtn.addEventListener('click', () => {\r\n\r\n    let edittedValue = document.getElementById(\"edit-project\").value;\r\n    if (edittedValue == \"\"){\r\n        return\r\n    }\r\n\r\n    let changeProject = document.getElementById(edittedProject);\r\n    let projectID = changeProject.id;\r\n\r\n\r\n    for (project in projectLibrary){\r\n        let obj = projectLibrary[project];\r\n        if (obj.projectName == projectID){\r\n            obj.projectName = edittedValue;\r\n        }\r\n    }\r\n\r\n    for (task in allTasks){\r\n        if (allTasks[task].project == projectID){\r\n            allTasks[task].project = edittedValue\r\n        }}\r\n\r\n    localStorage.setItem(\"allTasks\", JSON.stringify(allTasks));\r\n    localStorage.setItem(\"projectLibrary\", JSON.stringify(projectLibrary));\r\n    renderTasks(activeProject, allTasks);\r\n    renderProjects(projectLibrary)\r\n    modalProject.style.display = \"none\";\r\n});\r\n\r\n\r\nlet addTaskBtn = document.getElementById(\"addTaskBtn\");\r\n\r\naddTaskBtn.addEventListener('click', () => {\r\n    //Get task from the form\r\n    let taskTitle = document.getElementById(\"new-task-form\").value;\r\n    let priority = priorityValue;\r\n\r\n    //Will need to reformat how it gets data from \"date\"\r\n    let date = document.getElementById(\"date\").value;\r\n    let notes = document.getElementById(\"notes-input\").value;\r\n\r\n    //Make sure form isn't empty\r\n    if (taskTitle == \"\"){\r\n        console.log('Task Title is blank')\r\n        return}\r\n    if (activeProject == allTasksTab){\r\n        alert(\"Please select a Project to add To-Do to.\")\r\n        return\r\n    }\r\n\r\n    for (task in allTasks){\r\n        if (task == taskTitle){\r\n            taskTitle = `${taskTitle}.1`;\r\n        }\r\n    }\r\n    \r\n    let newTask = addTask(taskTitle, activeProject.projectName, priority, date, notes);\r\n\r\n    addTaskToProject(newTask);\r\n    renderTasks(activeProject, allTasks);\r\n    localStorage.setItem(\"allTasks\", JSON.stringify(allTasks));\r\n    localStorage.setItem(\"projectLibrary\", JSON.stringify(projectLibrary));\r\n});\r\n\r\n\r\nlet projectLibrary = getProjectLibrary();\r\n\r\nrenderProjects(projectLibrary);\r\nrenderTasks(activeProject, allTasks);\r\n\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/tasks.js":
/*!**********************!*\
  !*** ./src/tasks.js ***!
  \**********************/
/*! exports provided: renderTasks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"renderTasks\", function() { return renderTasks; });\n// import { compareAsc, format } from 'date-fns'\r\n\r\n// format(new Date(2014, 1, 11), 'yyyy-MM-dd')\r\n\r\n\r\nlet edittedTask = \"\";\r\nlet editTaskFormValue = \"\";\r\n\r\nlet formTask = document.getElementById(\"form-task\");\r\nlet editTaskForm = document.createElement('textarea');\r\neditTaskForm.id = \"edit-task\";\r\neditTaskForm.className = \"form-input-task\";\r\neditTaskForm.value = editTaskFormValue\r\nformTask.appendChild(editTaskForm);\r\n\r\nlet editTaskBtn = document.createElement('button')\r\neditTaskBtn.id = \"submit-task\";\r\neditTaskBtn.innerHTML = \"Submit\";\r\nformTask.appendChild(editTaskBtn);\r\n\r\nlet modalTask = document.getElementById(\"modal-task\");\r\n\r\nlet taskSpan = document.getElementsByClassName(\"span-task\")[0];\r\n\r\nfunction renderTaskForm (editTaskFormValue, edittedTask, allTasks) {\r\n    let formTask = document.getElementById(\"form-task\");\r\n    let editTaskForm = document.createElement('textarea'); \r\n\r\n    function clearTaskForm(){\r\n        formTask.innerHTML = \"\";\r\n    }\r\n    clearTaskForm()\r\n\r\n    // editTaskForm.type = \"text\";\r\n    editTaskForm.id = \"edit-task\";\r\n    editTaskForm.className = \"form-input-task\";\r\n    editTaskForm.value = editTaskFormValue\r\n    formTask.appendChild(editTaskForm);\r\n\r\n    let editTaskBtn = document.createElement('button')\r\n    editTaskBtn.id = \"submit-task\";\r\n    editTaskBtn.innerHTML = \"Submit\";\r\n    formTask.appendChild(editTaskBtn);\r\n\r\n\r\n    taskSpan.onclick = function() {\r\n        modalTask.style.display = \"none\";\r\n        // renderTasks(activeProject, allTasks)\r\n        // renderTaskForm();\r\n    }\r\n    \r\n    window.onclick = function(event) {\r\n      if (event.target == modalTask) {\r\n        modalTask.style.display = \"none\";\r\n        // renderTasks(activeProject, allTasks);\r\n        // renderTaskForm();\r\n      }\r\n    }\r\n\r\n    editTaskBtn.addEventListener('click', () => {\r\n        console.log(\"test editTaskBtn\")\r\n        // edittedTask = renderTasks(activeProject, allTasks);\r\n        // console.log(\"Returned edittedTask:\", edittedTask)\r\n        // let edittedValueTask = document.getElementById(\"edit-task\").value;\r\n        let editTaskFormValue = document.getElementById(\"edit-task\").value;\r\n        // let newEditTask = edittedTask;\r\n        let changeTask = document.getElementById(edittedTask);\r\n        let taskID = changeTask.id;\r\n        \r\n        // console.log(\"EDITTEDVALUETASK\", edittedValueTask)\r\n        // console.log(\"tasksArr!!!\", allTasks)\r\n    \r\n        for (let i in allTasks){\r\n            let ob = allTasks[i];\r\n            // console.log(`i: ${i} taskID: ${taskID}`)\r\n            console.log(`ob.taskName: ${ob.taskName} taskID: ${taskID}`)\r\n            if (ob.taskName == taskID){\r\n                console.log(\"match between i and taskID\")\r\n                // obj.innerHTML = edittedValue;\r\n                ob.notes = editTaskFormValue;\r\n                console.log(\"Stored edittedValue:\", editTaskFormValue)\r\n            }\r\n        }\r\n    \r\n        console.log(\"EdittedTaskValueForm:\", editTaskFormValue)\r\n        console.log(\"EDITTEDTASK\", edittedTask)\r\n        console.log(\"tasksArr!!!!!\", allTasks)\r\n        // localStorage.setItem(\"allTasks\", JSON.stringify(allTasks));\r\n    \r\n        renderTaskForm(editTaskFormValue, edittedTask, allTasks)\r\n        \r\n        // obj.notes = edittedValueTask;\r\n    \r\n        // console.log(projectLibrary)\r\n        localStorage.setItem(\"allTasks\", JSON.stringify(allTasks));\r\n        // localStorage.setItem(\"projectLibrary\", JSON.stringify(projectLibrary));\r\n        \r\n        // renderProjects(projectLibrary)\r\n        modalTask.style.display = \"none\";\r\n    }); \r\n\r\n\r\n};\r\n\r\nfunction renderTasks(activeProject, allTasks){\r\n    \r\n    let todoContent = document.getElementById(\"todo-content\");\r\n    let modalTask = document.getElementById(\"modal-task\");\r\n\r\n    function clearTasks(){\r\n        todoContent.innerHTML = '';\r\n    };\r\n    clearTasks();\r\n\r\n    if(todoContent.length === 0) {\r\n        console.log(\"todoContent length equals zero!\")\r\n        return\r\n      };\r\n\r\n    if(allTasks == null){\r\n        console.log(\"tasksArr equals null!\")\r\n        return\r\n    };\r\n\r\n    console.log(\"allTasks:\", allTasks)\r\n\r\n    for (let task in allTasks){\r\n        let obj = allTasks[task];\r\n\r\n        if ((obj.project == activeProject.projectName) || (activeProject.projectName == \"all\")){\r\n            let newElement = document.createElement('div');\r\n            newElement.className = obj.taskName;\r\n            newElement.classList.add(\"box\");\r\n            newElement.id = obj.taskName;\r\n            todoContent.appendChild(newElement);\r\n    \r\n            let uncheckedBox = document.createElement('div');\r\n            uncheckedBox.innerHTML = 'X';\r\n            uncheckedBox.className = 'uncheckedBox';\r\n            newElement.appendChild(uncheckedBox);\r\n            // let boxValueInput = obj.done;\r\n\r\n            if (obj.done == \"yes\"){\r\n                uncheckedBox.className = \"checked\";\r\n            }\r\n\r\n            uncheckedBox.addEventListener('click', () => {\r\n                console.log('checked')\r\n                if (obj.done != \"yes\"){\r\n                    uncheckedBox.className = \"checked\";\r\n                    obj.done = \"yes\";\r\n                    localStorage.setItem(\"allTasks\", JSON.stringify(allTasks));\r\n                } else{\r\n                    if (priorityValueInput == \"low\") {\r\n                        lowPriority.classList.add(\"lowSelected\");\r\n                        medPriority.classList.remove(\"mediumSelected\");\r\n                        highPriority.classList.remove(\"highSelected\");\r\n        \r\n                        uncheckedBox.className = \"lowBox\";\r\n                    };\r\n        \r\n                    if (priorityValueInput == \"medium\") {\r\n                        lowPriority.classList.remove(\"lowSelected\");\r\n                        medPriority.classList.add(\"mediumSelected\");\r\n                        highPriority.classList.remove(\"highSelected\");\r\n        \r\n                        uncheckedBox.className = \"medBox\";\r\n                    };\r\n        \r\n                    if (priorityValueInput == \"high\") {\r\n                        lowPriority.classList.remove(\"lowSelected\");\r\n                        medPriority.classList.remove(\"mediumSelected\");\r\n                        highPriority.classList.add(\"highSelected\");\r\n        \r\n                        uncheckedBox.className = \"highBox\";\r\n                    };\r\n\r\n                    obj.done = \"no\";\r\n                    console.log('Ending obj.done', obj.done)\r\n                    localStorage.setItem(\"allTasks\", JSON.stringify(allTasks));\r\n                }\r\n                console.log(\"allTasks End:\", allTasks)\r\n            });\r\n\r\n\r\n            // let checkedCircle = document.createElement('div');\r\n            \r\n            let taskTitle = document.createElement('div');\r\n            taskTitle.innerHTML = obj.taskName;\r\n            taskTitle.classList.add(obj.taskName);\r\n            taskTitle.classList.add(\"task\");\r\n            newElement.appendChild(taskTitle);\r\n    \r\n\r\n            let noteDisp = document.createElement('div');\r\n            noteDisp.innerHTML = '<i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>';\r\n            noteDisp.classList.add(\"noteDisplay\");\r\n            noteDisp.id = task;\r\n            noteDisp.title = obj.taskName\r\n            noteDisp.text = obj.notes;\r\n\r\n            noteDisp.onclick = function(){\r\n                editTaskFormValue = obj.notes;\r\n                edittedTask = obj.taskName;\r\n                renderTaskForm(editTaskFormValue, edittedTask, allTasks);\r\n                \r\n                modalTask.style.display = \"block\";\r\n                return edittedTask = edittedTask\r\n            }\r\n\r\n            newElement.appendChild(noteDisp);\r\n\r\n            let priorityDisp = document.createElement('div');\r\n            // priorityDisp.innerHTML = obj.priority;\r\n            let priorityValueInput = obj.priority;\r\n            console.log(\"priority value,\", obj.priority)\r\n            priorityDisp.classList.add(obj.priority);\r\n            priorityDisp.classList.add(\"priorityDisplay\");\r\n            newElement.appendChild(priorityDisp);\r\n\r\n            // let readElement = document.createElement('div');\r\n            // readElement.innerHTML = '';\r\n            // readElement.className = \"read box\";\r\n            // readValue = obj.readStatus\r\n            // console.log(readValue)\r\n            // card.appendChild(readElement);\r\n\r\n            //Create priority buttons for each Task\r\n            let lowPriority = document.createElement('div')\r\n            lowPriority.innerHTML = 'Low';\r\n            lowPriority.className = \"toggle\";\r\n            priorityDisp.appendChild(lowPriority);\r\n\r\n            let medPriority = document.createElement('div')\r\n            medPriority.innerHTML = 'Medium';\r\n            medPriority.className = \"toggle\";\r\n            priorityDisp.appendChild(medPriority);\r\n\r\n            let highPriority = document.createElement('div')\r\n            highPriority.innerHTML = 'High';\r\n            highPriority.className = \"toggle\";\r\n            priorityDisp.appendChild(highPriority);\r\n\r\n            //apply selection if the input priority value corresponds with div        \r\n            if (priorityValueInput == \"low\") {\r\n                lowPriority.classList.add(\"lowSelected\");\r\n                medPriority.classList.remove(\"mediumSelected\");\r\n                highPriority.classList.remove(\"highSelected\");\r\n\r\n                if (obj.done != \"yes\"){\r\n                uncheckedBox.className = \"lowBox\";\r\n                }\r\n            };\r\n\r\n            if (priorityValueInput == \"medium\") {\r\n                lowPriority.classList.remove(\"lowSelected\");\r\n                medPriority.classList.add(\"mediumSelected\");\r\n                highPriority.classList.remove(\"highSelected\");\r\n\r\n                if (obj.done != \"yes\"){\r\n                uncheckedBox.className = \"medBox\";\r\n                }\r\n            };\r\n\r\n            if (priorityValueInput == \"high\") {\r\n                lowPriority.classList.remove(\"lowSelected\");\r\n                medPriority.classList.remove(\"mediumSelected\");\r\n                highPriority.classList.add(\"highSelected\");\r\n\r\n                if (obj.done != \"yes\"){\r\n                uncheckedBox.className = \"highBox\";\r\n                }\r\n            };\r\n\r\n            //event listeners\r\n            lowPriority.onclick = function() {\r\n                lowPriority.classList.add(\"lowSelected\");\r\n                medPriority.classList.remove(\"mediumSelected\");\r\n                highPriority.classList.remove(\"highSelected\");\r\n                obj.priority = \"low\";\r\n                uncheckedBox.className = \"lowBox\";\r\n                if (obj.done == \"yes\"){\r\n                    obj.done = \"no\";\r\n                    }\r\n                localStorage.setItem(\"allTasks\", JSON.stringify(allTasks));\r\n            };\r\n\r\n            medPriority.onclick = function() {\r\n                lowPriority.classList.remove(\"lowSelected\");\r\n                medPriority.classList.add(\"mediumSelected\");\r\n                highPriority.classList.remove(\"highSelected\");\r\n                obj.priority = \"medium\";\r\n                uncheckedBox.className = \"medBox\";\r\n                if (obj.done == \"yes\"){\r\n                    obj.done = \"no\";\r\n                    }\r\n                localStorage.setItem(\"allTasks\", JSON.stringify(allTasks));\r\n                }\r\n\r\n            highPriority.onclick = function() {\r\n                lowPriority.classList.remove(\"lowSelected\");\r\n                medPriority.classList.remove(\"mediumSelected\");\r\n                highPriority.classList.add(\"highSelected\");\r\n                obj.priority = \"high\";\r\n                uncheckedBox.className = \"highBox\";\r\n                if (obj.done == \"yes\"){\r\n                    obj.done = \"no\";\r\n                    }\r\n                localStorage.setItem(\"allTasks\", JSON.stringify(allTasks));\r\n                }\r\n\r\n            \r\n            let dateDisp = document.createElement('input');\r\n            dateDisp.type = 'date';\r\n            dateDisp.value = obj.date;\r\n            dateDisp.classList.add(\"dateDisplay\");\r\n            dateDisp.addEventListener(\"change\", function(e){\r\n                obj.date = dateDisp.value;\r\n                localStorage.setItem(\"allTasks\", JSON.stringify(allTasks));\r\n              }, false\r\n              );\r\n\r\n\r\n            newElement.appendChild(dateDisp);\r\n\r\n            let closeTask = document.createElement('div');\r\n            closeTask.innerHTML = '<i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>';\r\n            closeTask.className = \"delete deleteTask\";\r\n            closeTask.id = task;\r\n\r\n            closeTask.onclick = function() {\r\n                allTasks.splice(closeTask.id,1);\r\n                allTasks = allTasks;\r\n    \r\n                localStorage.setItem(\"allTasks\", JSON.stringify(allTasks));\r\n                renderTasks(activeProject, allTasks);\r\n              }\r\n            newElement.appendChild(closeTask);      \r\n        }\r\n    };\r\n\r\n    return edittedTask\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/tasks.js\n");

/***/ })

/******/ });